version: '2.1'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    hostname: zookeeper
    container_name: rust_service_zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 1000
      KAFKA_OPTS: -Dzookeeper.4lw.commands.whitelist=ruok
    healthcheck:
      test: '[ $$(echo ruok | nc localhost 2181) = "imok" ]'
      interval: 1s
      timeout: 2s
      retries: 60

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    hostname: kafka
    container_name: rust_service_kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - '29092:29092'
      - '9092:9092'
      - '9101:9101'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${HOST_IP}:29092,PLAINTEXT_HOST://${HOST_IP}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    healthcheck:
      test: 'kafka-topics --bootstrap-server ${HOST_IP}:9092 --list'
      interval: 1s
      timeout: 2s
      retries: 60

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.0
    container_name: rust_service_schema_registry
    ports:
      - '8081:8081'
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
    healthcheck:
      test: 'curl --fail http://schema-registry:8081/subjects'
      interval: 1s
      timeout: 2s
      retries: 60

  kowl:
    image: quay.io/cloudhut/kowl:v1.5.0
    container_name: rust_service_kowl
    ports:
      - '8080:8080'
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    environment:
      KAFKA_BROKERS: kafka:9092
      KAFKA_SCHEMAREGISTRY_ENABLED: 'true'
      KAFKA_SCHEMAREGISTRY_URLS: http://schema-registry:8081
